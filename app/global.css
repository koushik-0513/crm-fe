@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --radius-2xl: calc(var(--radius) + 8px);
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  min-height: 100vh;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root {
  --radius: 0.75rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0 0 0);
  --primary: oklch(0 0 0);
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(0.9 0 0);
  --secondary-foreground: oklch(0 0 0);
  --muted: oklch(0.9 0 0);
  --muted-foreground: oklch(0.4 0 0);
  --accent: oklch(0.95 0 0);
  --accent-foreground: oklch(0 0 0);
  --destructive: oklch(0 0 0);
  --border: oklch(0.8 0 0);
  --input: oklch(0.8 0 0);
  --ring: oklch(0 0 0);
  --chart-1: oklch(0.65 0.15 280);
  --chart-2: oklch(0.65 0.12 200);
  --chart-3: oklch(0.65 0.12 160);
  --chart-4: oklch(0.65 0.12 120);
  --chart-5: oklch(0.65 0.12 80);
  --sidebar: oklch(1 0 0);
  --sidebar-foreground: oklch(0 0 0);
  --sidebar-primary: oklch(0 0 0);
  --sidebar-primary-foreground: oklch(1 0 0);
  --sidebar-accent: oklch(0.9 0 0);
  --sidebar-accent-foreground: oklch(0 0 0);
  --sidebar-border: oklch(0.8 0 0);
  --sidebar-ring: oklch(0 0 0);
}

.dark {
  --background: oklch(0 0 0);
  --foreground: oklch(1 0 0);
  --card: oklch(0.05 0 0);
  --card-foreground: oklch(1 0 0);
  --popover: oklch(0.05 0 0);
  --popover-foreground: oklch(1 0 0);
  --primary: oklch(1 0 0);
  --primary-foreground: oklch(0 0 0);
  --secondary: oklch(0.1 0 0);
  --secondary-foreground: oklch(1 0 0);
  --muted: oklch(0.1 0 0);
  --muted-foreground: oklch(0.6 0 0);
  --accent: oklch(0.05 0 0);
  --accent-foreground: oklch(1 0 0);
  --destructive: oklch(1 0 0);
  --border: oklch(0.2 0 0);
  --input: oklch(0.2 0 0);
  --ring: oklch(1 0 0);
  --chart-1: oklch(0.65 0.15 280);
  --chart-2: oklch(0.65 0.12 200);
  --chart-3: oklch(0.65 0.12 160);
  --chart-4: oklch(0.65 0.12 120);
  --chart-5: oklch(0.65 0.12 80);
  --sidebar: oklch(0 0 0);
  --sidebar-foreground: oklch(1 0 0);
  --sidebar-primary: oklch(1 0 0);
  --sidebar-primary-foreground: oklch(0 0 0);
  --sidebar-accent: oklch(0.1 0 0);
  --sidebar-accent-foreground: oklch(1 0 0);
  --sidebar-border: oklch(0.2 0 0);
  --sidebar-ring: oklch(1 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* Responsive utilities */
@layer utilities {
  .mobile-only {
    @apply block xl:hidden;
  }

  .desktop-only {
    @apply hidden xl:block;
  }

  .tablet-up {
    @apply hidden md:block;
  }

  .mobile-up {
    @apply block md:hidden;
  }
}

/* Smooth layout transitions */
.grid {
  transition: grid-template-columns 0.3s ease-in-out;
}

/* Mobile-specific styles */
@media (max-width: 768px) {
  .mobile-container {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .mobile-text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .mobile-text-xs {
    font-size: 0.75rem;
    line-height: 1rem;
  }
}

/* Touch-friendly interactions */
@media (hover: none) and (pointer: coarse) {
  .touch-target {
    min-height: 44px;
    min-width: 44px;
  }

  .touch-friendly {
    padding: 0.75rem;
    margin: 0.25rem;
  }
}

/* Modern gradient backgrounds - Theme aware */
.gradient-bg {
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary) / 0.8) 100%);
}

.gradient-bg-soft {
  background: linear-gradient(135deg, hsl(var(--secondary)) 0%, hsl(var(--secondary) / 0.8) 100%);
}

.gradient-bg-blue {
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary) / 0.8) 100%);
}

.gradient-bg-green {
  background: linear-gradient(135deg, hsl(var(--secondary)) 0%, hsl(var(--secondary) / 0.8) 100%);
}

.gradient-bg-purple {
  background: linear-gradient(135deg, hsl(var(--accent)) 0%, hsl(var(--accent) / 0.8) 100%);
}

.gradient-bg-orange {
  background: linear-gradient(135deg, hsl(var(--muted)) 0%, hsl(var(--muted) / 0.8) 100%);
}

/* Modern card shadows */
.card-shadow {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.card-shadow-hover {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

/* Smooth transitions */
.smooth-transition {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Modern button styles */
.btn-modern {
  @apply rounded-full px-6 py-3 font-medium transition-all duration-300 transform hover:scale-105;
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary) / 0.8) 100%);
  box-shadow: 0 4px 15px hsl(var(--primary) / 0.4);
  color: hsl(var(--primary-foreground));
}

.btn-modern:hover {
  box-shadow: 0 6px 20px hsl(var(--primary) / 0.6);
}



/* Walkthrough zoom effects */
.walkthrough-zoom {
  transform-origin: center center;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  border-radius: 16px;
  position: relative;
  z-index: 10000;
}

/* Smooth transitions for walkthrough elements */
.walkthrough-zoom * {
  transition: all 0.3s ease-in-out;
}

/* Modern chart styles */
.chart-modern {
  border-radius: 16px;
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.dark .chart-modern {
  box-shadow: 0 4px 6px -1px rgba(255, 255, 255, 0.05);
}

/* Glass morphism effect */
.glass {
  background: rgba(255, 255, 255, 0.25);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.18);
}

/* Modern typography */
.text-modern {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  font-weight: 600;
  letter-spacing: -0.025em;
}

.text-modern-light {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  font-weight: 400;
  letter-spacing: -0.01em;
}

/* Mobile-first responsive design */
.container-responsive {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

@media (min-width: 640px) {
  .container-responsive {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container-responsive {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container-responsive {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container-responsive {
    max-width: 1280px;
  }
}

/* Safe area for mobile devices */
.safe-area-top {
  padding-top: env(safe-area-inset-top);
}

.safe-area-bottom {
  padding-bottom: env(safe-area-inset-bottom);
}

.safe-area-left {
  padding-left: env(safe-area-inset-left);
}

.safe-area-right {
  padding-right: env(safe-area-inset-right);
}

/* Complete Date picker dark theme overrides */
.rdrCalendarWrapper {
  background: hsl(var(--popover)) !important;
  color: hsl(var(--popover-foreground)) !important;
  border: 1px solid hsl(var(--border)) !important;
  border-radius: 8px !important;
}

.rdrMonth {
  background: hsl(var(--popover)) !important;
}

.rdrWeekDays {
  background: hsl(var(--popover)) !important;
}

.rdrWeekDay {
  color: hsl(var(--muted-foreground)) !important;
  background: hsl(var(--popover)) !important;
}

.rdrDay {
  background: hsl(var(--popover)) !important;
}

.rdrDay span {
  color: hsl(var(--popover-foreground)) !important;
  background: transparent !important;
}

.rdrDay:not(.rdrDayPassive) .rdrInRange~.rdrDayNumber span,
.rdrDay:not(.rdrDayPassive) .rdrStartEdge~.rdrDayNumber span,
.rdrDay:not(.rdrDayPassive) .rdrEndEdge~.rdrDayNumber span,
.rdrDay:not(.rdrDayPassive) .rdrSelected~.rdrDayNumber span {
  color: hsl(var(--primary-foreground)) !important;
}

.rdrDayToday .rdrDayNumber span:after {
  background: hsl(var(--primary)) !important;
}

.rdrDayHovered span {
  background: hsl(var(--accent)) !important;
  color: hsl(var(--accent-foreground)) !important;
}

.rdrDayActive span {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.rdrDaySelected span {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.rdrInRange {
  background: hsl(var(--primary) / 0.1) !important;
  color: hsl(var(--popover-foreground)) !important;
}

.rdrStartEdge,
.rdrEndEdge {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.rdrStartEdge span,
.rdrEndEdge span {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.rdrMonthAndYearWrapper {
  background: hsl(var(--popover)) !important;
  color: hsl(var(--popover-foreground)) !important;
  border-bottom: 1px solid hsl(var(--border)) !important;
}

.rdrMonthAndYearPickers select {
  background: hsl(var(--popover)) !important;
  color: hsl(var(--popover-foreground)) !important;
  border: 1px solid hsl(var(--border)) !important;
}

.rdrNextPrevButton {
  background: hsl(var(--secondary)) !important;
  color: hsl(var(--secondary-foreground)) !important;
  border: 1px solid hsl(var(--border)) !important;
}

.rdrNextPrevButton:hover {
  background: hsl(var(--accent)) !important;
  color: hsl(var(--accent-foreground)) !important;
}

.rdrPprevButton i,
.rdrNextButton i {
  border-color: transparent hsl(var(--popover-foreground)) transparent transparent !important;
}

.rdrNextButton i {
  border-color: transparent transparent transparent hsl(var(--popover-foreground)) !important;
}

/* Override all blue colors in date picker */
.rdrSelected,
.rdrInRange,
.rdrStartEdge,
.rdrEndEdge {
  background: hsl(var(--primary)) !important;
}

.rdrDefinedRangesWrapper {
  background: hsl(var(--popover)) !important;
  border-right: 1px solid hsl(var(--border)) !important;
}

.rdrStaticRange {
  background: hsl(var(--popover)) !important;
  color: hsl(var(--popover-foreground)) !important;
  border: 1px solid transparent !important;
}

.rdrStaticRange:hover,
.rdrStaticRange:focus {
  background: hsl(var(--accent)) !important;
  color: hsl(var(--accent-foreground)) !important;
}

.rdrStaticRangeSelected {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

/* Force remove all blue backgrounds and use theme colors */
.react-daterange-picker__wrapper {
  background: hsl(var(--background)) !important;
  border: 1px solid hsl(var(--border)) !important;
}

.react-daterange-picker__inputGroup {
  background: hsl(var(--background)) !important;
  color: hsl(var(--foreground)) !important;
}

.react-daterange-picker__clear-button,
.react-daterange-picker__calendar-button {
  background: hsl(var(--background)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Comprehensive blue color removal */
.rdrDayStartPreview,
.rdrDayInPreview,
.rdrDayEndPreview {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

/* Force override blue selections */
.rdrCalendarWrapper .rdrDayHovered .rdrDayNumber span {
  background: hsl(var(--accent)) !important;
  color: hsl(var(--accent-foreground)) !important;
}

.rdrCalendarWrapper .rdrDayActive .rdrDayNumber span {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.rdrCalendarWrapper .rdrInRange .rdrDayNumber span {
  background: hsl(var(--primary) / 0.3) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.rdrCalendarWrapper .rdrStartEdge .rdrDayNumber span,
.rdrCalendarWrapper .rdrEndEdge .rdrDayNumber span {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

/* Remove all blues completely */
.rdrCalendarWrapper * {
  color: inherit !important;
}

.rdrCalendarWrapper [style*="background-color: rgb(51, 130, 246)"],
.rdrCalendarWrapper [style*="background: rgb(51, 130, 246)"],
.rdrCalendarWrapper [style*="background-color: #3b82f6"],
.rdrCalendarWrapper [style*="background: #3b82f6"] {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.rdrCalendarWrapper [style*="color: rgb(51, 130, 246)"],
.rdrCalendarWrapper [style*="color: #3b82f6"] {
  color: hsl(var(--primary)) !important;
}

/* Target specific blue background overrides */
.rdrDayNumber {
  color: hsl(var(--popover-foreground)) !important;
}

.rdrSelected .rdrDayNumber span {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.rdrInRange .rdrDayNumber span {
  background: hsl(var(--primary) / 0.2) !important;
  color: hsl(var(--popover-foreground)) !important;
}

/* Activities page specific overrides */
.activities-timeline .date-picker-container button {
  background: hsl(var(--background)) !important;
  color: hsl(var(--foreground)) !important;
  border: 1px solid hsl(var(--border)) !important;
}

.activities-timeline .date-picker-container button:hover {
  background: hsl(var(--accent)) !important;
  color: hsl(var(--accent-foreground)) !important;
}

.activities-timeline .date-picker-container button[data-variant="default"] {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.activities-timeline .date-picker-container button[data-variant="default"]:hover {
  background: hsl(var(--primary) / 0.8) !important;
  color: hsl(var(--primary-foreground)) !important;
}

/* Remove any purple/violet colors from activities page */
.activities-timeline button,
.activities-timeline .btn-modern,
.activities-timeline [class*="purple"],
.activities-timeline [class*="violet"],
.activities-timeline [class*="blue"] {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

/* Ensure all activities page elements use theme colors */
.activities-timeline [style*="background-color: purple"],
.activities-timeline [style*="background-color: violet"],
.activities-timeline [style*="background-color: blue"],
.activities-timeline [style*="background: purple"],
.activities-timeline [style*="background: violet"],
.activities-timeline [style*="background: blue"] {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}

.activities-timeline [style*="color: purple"],
.activities-timeline [style*="color: violet"],
.activities-timeline [style*="color: blue"] {
  color: hsl(var(--primary)) !important;
}

/* Override any hardcoded blue/purple values */
.activities-timeline * {
  color: inherit;
}

.activities-timeline .bg-blue-50,
.activities-timeline .border-blue-500,
.activities-timeline .text-blue-600,
.activities-timeline .text-blue-700 {
  background: hsl(var(--accent)) !important;
  border-color: hsl(var(--border)) !important;
  color: hsl(var(--accent-foreground)) !important;
}

/* Enhanced activities page styling */
.activities-timeline {
  background: hsl(var(--background));
  min-height: 100vh;
}

.activities-timeline .activity-card {
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  transition: all 0.2s ease-in-out;
}

.activities-timeline .activity-card:hover {
  background: hsl(var(--accent) / 0.3);
  border-color: hsl(var(--accent));
}

.activities-timeline .filter-button {
  background: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  color: hsl(var(--foreground));
  transition: all 0.2s ease-in-out;
}

.activities-timeline .filter-button:hover {
  background: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

/* Better typography for activities */
.activities-timeline h1 {
  color: hsl(var(--foreground));
  font-weight: 600;
  letter-spacing: -0.025em;
}

.activities-timeline h3 {
  color: hsl(var(--foreground));
  font-weight: 500;
  letter-spacing: -0.01em;
}

/* Dark theme enhancements */
.dark .activities-timeline {
  background: hsl(var(--background));
}

.dark .activities-timeline .activity-card {
  background: hsl(var(--card));
  border-color: hsl(var(--border));
  box-shadow: 0 1px 3px rgba(255, 255, 255, 0.05);
}

.dark .activities-timeline .activity-card:hover {
  background: hsl(var(--accent) / 0.2);
  border-color: hsl(var(--accent));
}

/* Activity icon styling */
.activities-timeline .activity-icon {
  background: hsl(var(--primary) / 0.1);
  border: 1px solid hsl(var(--border));
  color: hsl(var(--primary));
}

.dark .activities-timeline .activity-icon {
  background: hsl(var(--primary) / 0.15);
  border-color: hsl(var(--border));
}